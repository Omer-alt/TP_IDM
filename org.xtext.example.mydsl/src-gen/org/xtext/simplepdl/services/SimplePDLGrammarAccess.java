/*
 * generated by Xtext 2.38.0
 */
package org.xtext.simplepdl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SimplePDLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ProcessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.Process");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProcessAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProcessKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cProcessElementsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cProcessElementsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cProcessElementsProcessElementParserRuleCall_4_2_0 = (RuleCall)cProcessElementsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cProcessElementsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cProcessElementsProcessElementParserRuleCall_4_3_1_0 = (RuleCall)cProcessElementsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Process returns Process:
		//    {Process}
		//    'Process'
		//    name=EString
		//    '{'
		//        ('processElements' '{' processElements+=ProcessElement ( "," processElements+=ProcessElement)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Process}
		//'Process'
		//name=EString
		//'{'
		//    ('processElements' '{' processElements+=ProcessElement ( "," processElements+=ProcessElement)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Process}
		public Action getProcessAction_0() { return cProcessAction_0; }
		
		//'Process'
		public Keyword getProcessKeyword_1() { return cProcessKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('processElements' '{' processElements+=ProcessElement ( "," processElements+=ProcessElement)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'processElements'
		public Keyword getProcessElementsKeyword_4_0() { return cProcessElementsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//processElements+=ProcessElement
		public Assignment getProcessElementsAssignment_4_2() { return cProcessElementsAssignment_4_2; }
		
		//ProcessElement
		public RuleCall getProcessElementsProcessElementParserRuleCall_4_2_0() { return cProcessElementsProcessElementParserRuleCall_4_2_0; }
		
		//( "," processElements+=ProcessElement)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//processElements+=ProcessElement
		public Assignment getProcessElementsAssignment_4_3_1() { return cProcessElementsAssignment_4_3_1; }
		
		//ProcessElement
		public RuleCall getProcessElementsProcessElementParserRuleCall_4_3_1_0() { return cProcessElementsProcessElementParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ProcessElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.ProcessElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cProcessElement_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWorkDefinitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWorkSequenceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ProcessElement returns ProcessElement:
		//    ProcessElement_Impl | WorkDefinition | WorkSequence;
		@Override public ParserRule getRule() { return rule; }
		
		//ProcessElement_Impl | WorkDefinition | WorkSequence
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ProcessElement_Impl
		public RuleCall getProcessElement_ImplParserRuleCall_0() { return cProcessElement_ImplParserRuleCall_0; }
		
		//WorkDefinition
		public RuleCall getWorkDefinitionParserRuleCall_1() { return cWorkDefinitionParserRuleCall_1; }
		
		//WorkSequence
		public RuleCall getWorkSequenceParserRuleCall_2() { return cWorkSequenceParserRuleCall_2; }
	}
	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.Resource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cHumainParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMaterielParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Resource returns Resource:
		//    Humain | Materiel;
		@Override public ParserRule getRule() { return rule; }
		
		//Humain | Materiel
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Humain
		public RuleCall getHumainParserRuleCall_0() { return cHumainParserRuleCall_0; }
		
		//Materiel
		public RuleCall getMaterielParserRuleCall_1() { return cMaterielParserRuleCall_1; }
	}
	public class ProcessElement_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.ProcessElement_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProcessElementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProcessElementKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ProcessElement_Impl returns ProcessElement:
		//    {ProcessElement}
		//    'ProcessElement'
		//    name=EString
		//    '{'
		//        ('description' description=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ProcessElement}
		//'ProcessElement'
		//name=EString
		//'{'
		//    ('description' description=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ProcessElement}
		public Action getProcessElementAction_0() { return cProcessElementAction_0; }
		
		//'ProcessElement'
		public Keyword getProcessElementKeyword_1() { return cProcessElementKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('description' description=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_4_0() { return cDescriptionKeyword_4_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_4_1_0() { return cDescriptionEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class WorkDefinitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.WorkDefinition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWorkDefinitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWorkDefinitionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDurationKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDurationAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDurationEIntParserRuleCall_5_1_0 = (RuleCall)cDurationAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cStartDateKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cStartDateAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cStartDateEStringParserRuleCall_6_1_0 = (RuleCall)cStartDateAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cEndDateKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cEndDateAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cEndDateEStringParserRuleCall_7_1_0 = (RuleCall)cEndDateAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLinksToSuccessorKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cLinksToSuccessorAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final CrossReference cLinksToSuccessorWorkSequenceCrossReference_8_2_0 = (CrossReference)cLinksToSuccessorAssignment_8_2.eContents().get(0);
		private final RuleCall cLinksToSuccessorWorkSequenceEStringParserRuleCall_8_2_0_1 = (RuleCall)cLinksToSuccessorWorkSequenceCrossReference_8_2_0.eContents().get(1);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cLinksToSuccessorAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final CrossReference cLinksToSuccessorWorkSequenceCrossReference_8_3_1_0 = (CrossReference)cLinksToSuccessorAssignment_8_3_1.eContents().get(0);
		private final RuleCall cLinksToSuccessorWorkSequenceEStringParserRuleCall_8_3_1_0_1 = (RuleCall)cLinksToSuccessorWorkSequenceCrossReference_8_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cLinksToPredecessorKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cLinksToPredecessorAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final CrossReference cLinksToPredecessorWorkSequenceCrossReference_9_2_0 = (CrossReference)cLinksToPredecessorAssignment_9_2.eContents().get(0);
		private final RuleCall cLinksToPredecessorWorkSequenceEStringParserRuleCall_9_2_0_1 = (RuleCall)cLinksToPredecessorWorkSequenceCrossReference_9_2_0.eContents().get(1);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cCommaKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final Assignment cLinksToPredecessorAssignment_9_3_1 = (Assignment)cGroup_9_3.eContents().get(1);
		private final CrossReference cLinksToPredecessorWorkSequenceCrossReference_9_3_1_0 = (CrossReference)cLinksToPredecessorAssignment_9_3_1.eContents().get(0);
		private final RuleCall cLinksToPredecessorWorkSequenceEStringParserRuleCall_9_3_1_0_1 = (RuleCall)cLinksToPredecessorWorkSequenceCrossReference_9_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9_4 = (Keyword)cGroup_9.eContents().get(4);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cResourceKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cResourceAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cResourceResourceParserRuleCall_10_2_0 = (RuleCall)cResourceAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cResourceAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cResourceResourceParserRuleCall_10_3_1_0 = (RuleCall)cResourceAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//WorkDefinition returns WorkDefinition:
		//    {WorkDefinition}
		//    'WorkDefinition'
		//    name=EString
		//    '{'
		//        ('description' description=EString)?
		//        ('duration' duration=EInt)?
		//        ('startDate' startDate=EString)?
		//        ('endDate' endDate=EString)?
		//        ('linksToSuccessor' '(' linksToSuccessor+=[WorkSequence|EString] ( "," linksToSuccessor+=[WorkSequence|EString])* ')' )?
		//        ('linksToPredecessor' '(' linksToPredecessor+=[WorkSequence|EString] ( "," linksToPredecessor+=[WorkSequence|EString])* ')' )?
		//        ('resource' '{' resource+=Resource ( "," resource+=Resource)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{WorkDefinition}
		//'WorkDefinition'
		//name=EString
		//'{'
		//    ('description' description=EString)?
		//    ('duration' duration=EInt)?
		//    ('startDate' startDate=EString)?
		//    ('endDate' endDate=EString)?
		//    ('linksToSuccessor' '(' linksToSuccessor+=[WorkSequence|EString] ( "," linksToSuccessor+=[WorkSequence|EString])* ')' )?
		//    ('linksToPredecessor' '(' linksToPredecessor+=[WorkSequence|EString] ( "," linksToPredecessor+=[WorkSequence|EString])* ')' )?
		//    ('resource' '{' resource+=Resource ( "," resource+=Resource)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{WorkDefinition}
		public Action getWorkDefinitionAction_0() { return cWorkDefinitionAction_0; }
		
		//'WorkDefinition'
		public Keyword getWorkDefinitionKeyword_1() { return cWorkDefinitionKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('description' description=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_4_0() { return cDescriptionKeyword_4_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_4_1_0() { return cDescriptionEStringParserRuleCall_4_1_0; }
		
		//('duration' duration=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'duration'
		public Keyword getDurationKeyword_5_0() { return cDurationKeyword_5_0; }
		
		//duration=EInt
		public Assignment getDurationAssignment_5_1() { return cDurationAssignment_5_1; }
		
		//EInt
		public RuleCall getDurationEIntParserRuleCall_5_1_0() { return cDurationEIntParserRuleCall_5_1_0; }
		
		//('startDate' startDate=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'startDate'
		public Keyword getStartDateKeyword_6_0() { return cStartDateKeyword_6_0; }
		
		//startDate=EString
		public Assignment getStartDateAssignment_6_1() { return cStartDateAssignment_6_1; }
		
		//EString
		public RuleCall getStartDateEStringParserRuleCall_6_1_0() { return cStartDateEStringParserRuleCall_6_1_0; }
		
		//('endDate' endDate=EString)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'endDate'
		public Keyword getEndDateKeyword_7_0() { return cEndDateKeyword_7_0; }
		
		//endDate=EString
		public Assignment getEndDateAssignment_7_1() { return cEndDateAssignment_7_1; }
		
		//EString
		public RuleCall getEndDateEStringParserRuleCall_7_1_0() { return cEndDateEStringParserRuleCall_7_1_0; }
		
		//('linksToSuccessor' '(' linksToSuccessor+=[WorkSequence|EString] ( "," linksToSuccessor+=[WorkSequence|EString])* ')' )?
		public Group getGroup_8() { return cGroup_8; }
		
		//'linksToSuccessor'
		public Keyword getLinksToSuccessorKeyword_8_0() { return cLinksToSuccessorKeyword_8_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_8_1() { return cLeftParenthesisKeyword_8_1; }
		
		//linksToSuccessor+=[WorkSequence|EString]
		public Assignment getLinksToSuccessorAssignment_8_2() { return cLinksToSuccessorAssignment_8_2; }
		
		//[WorkSequence|EString]
		public CrossReference getLinksToSuccessorWorkSequenceCrossReference_8_2_0() { return cLinksToSuccessorWorkSequenceCrossReference_8_2_0; }
		
		//EString
		public RuleCall getLinksToSuccessorWorkSequenceEStringParserRuleCall_8_2_0_1() { return cLinksToSuccessorWorkSequenceEStringParserRuleCall_8_2_0_1; }
		
		//( "," linksToSuccessor+=[WorkSequence|EString])*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//linksToSuccessor+=[WorkSequence|EString]
		public Assignment getLinksToSuccessorAssignment_8_3_1() { return cLinksToSuccessorAssignment_8_3_1; }
		
		//[WorkSequence|EString]
		public CrossReference getLinksToSuccessorWorkSequenceCrossReference_8_3_1_0() { return cLinksToSuccessorWorkSequenceCrossReference_8_3_1_0; }
		
		//EString
		public RuleCall getLinksToSuccessorWorkSequenceEStringParserRuleCall_8_3_1_0_1() { return cLinksToSuccessorWorkSequenceEStringParserRuleCall_8_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8_4() { return cRightParenthesisKeyword_8_4; }
		
		//('linksToPredecessor' '(' linksToPredecessor+=[WorkSequence|EString] ( "," linksToPredecessor+=[WorkSequence|EString])* ')' )?
		public Group getGroup_9() { return cGroup_9; }
		
		//'linksToPredecessor'
		public Keyword getLinksToPredecessorKeyword_9_0() { return cLinksToPredecessorKeyword_9_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_9_1() { return cLeftParenthesisKeyword_9_1; }
		
		//linksToPredecessor+=[WorkSequence|EString]
		public Assignment getLinksToPredecessorAssignment_9_2() { return cLinksToPredecessorAssignment_9_2; }
		
		//[WorkSequence|EString]
		public CrossReference getLinksToPredecessorWorkSequenceCrossReference_9_2_0() { return cLinksToPredecessorWorkSequenceCrossReference_9_2_0; }
		
		//EString
		public RuleCall getLinksToPredecessorWorkSequenceEStringParserRuleCall_9_2_0_1() { return cLinksToPredecessorWorkSequenceEStringParserRuleCall_9_2_0_1; }
		
		//( "," linksToPredecessor+=[WorkSequence|EString])*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//","
		public Keyword getCommaKeyword_9_3_0() { return cCommaKeyword_9_3_0; }
		
		//linksToPredecessor+=[WorkSequence|EString]
		public Assignment getLinksToPredecessorAssignment_9_3_1() { return cLinksToPredecessorAssignment_9_3_1; }
		
		//[WorkSequence|EString]
		public CrossReference getLinksToPredecessorWorkSequenceCrossReference_9_3_1_0() { return cLinksToPredecessorWorkSequenceCrossReference_9_3_1_0; }
		
		//EString
		public RuleCall getLinksToPredecessorWorkSequenceEStringParserRuleCall_9_3_1_0_1() { return cLinksToPredecessorWorkSequenceEStringParserRuleCall_9_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9_4() { return cRightParenthesisKeyword_9_4; }
		
		//('resource' '{' resource+=Resource ( "," resource+=Resource)* '}' )?
		public Group getGroup_10() { return cGroup_10; }
		
		//'resource'
		public Keyword getResourceKeyword_10_0() { return cResourceKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//resource+=Resource
		public Assignment getResourceAssignment_10_2() { return cResourceAssignment_10_2; }
		
		//Resource
		public RuleCall getResourceResourceParserRuleCall_10_2_0() { return cResourceResourceParserRuleCall_10_2_0; }
		
		//( "," resource+=Resource)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//resource+=Resource
		public Assignment getResourceAssignment_10_3_1() { return cResourceAssignment_10_3_1; }
		
		//Resource
		public RuleCall getResourceResourceParserRuleCall_10_3_1_0() { return cResourceResourceParserRuleCall_10_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class WorkSequenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.WorkSequence");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkSequenceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeWorkSequenceTypeEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Keyword cPredecessorKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cPredecessorAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cPredecessorWorkDefinitionCrossReference_6_0 = (CrossReference)cPredecessorAssignment_6.eContents().get(0);
		private final RuleCall cPredecessorWorkDefinitionEStringParserRuleCall_6_0_1 = (RuleCall)cPredecessorWorkDefinitionCrossReference_6_0.eContents().get(1);
		private final Keyword cSuccessorKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSuccessorAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cSuccessorWorkDefinitionCrossReference_8_0 = (CrossReference)cSuccessorAssignment_8.eContents().get(0);
		private final RuleCall cSuccessorWorkDefinitionEStringParserRuleCall_8_0_1 = (RuleCall)cSuccessorWorkDefinitionCrossReference_8_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//WorkSequence returns WorkSequence:
		//    'WorkSequence'
		//    name=EString
		//    '{'
		//        ('description' description=EString)?
		//        ('type' type=WorkSequenceType)?
		//        'predecessor' predecessor=[WorkDefinition|EString]
		//        'successor' successor=[WorkDefinition|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'WorkSequence'
		//name=EString
		//'{'
		//    ('description' description=EString)?
		//    ('type' type=WorkSequenceType)?
		//    'predecessor' predecessor=[WorkDefinition|EString]
		//    'successor' successor=[WorkDefinition|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'WorkSequence'
		public Keyword getWorkSequenceKeyword_0() { return cWorkSequenceKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('description' description=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_1_0() { return cDescriptionEStringParserRuleCall_3_1_0; }
		
		//('type' type=WorkSequenceType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=WorkSequenceType
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//WorkSequenceType
		public RuleCall getTypeWorkSequenceTypeEnumRuleCall_4_1_0() { return cTypeWorkSequenceTypeEnumRuleCall_4_1_0; }
		
		//'predecessor'
		public Keyword getPredecessorKeyword_5() { return cPredecessorKeyword_5; }
		
		//predecessor=[WorkDefinition|EString]
		public Assignment getPredecessorAssignment_6() { return cPredecessorAssignment_6; }
		
		//[WorkDefinition|EString]
		public CrossReference getPredecessorWorkDefinitionCrossReference_6_0() { return cPredecessorWorkDefinitionCrossReference_6_0; }
		
		//EString
		public RuleCall getPredecessorWorkDefinitionEStringParserRuleCall_6_0_1() { return cPredecessorWorkDefinitionEStringParserRuleCall_6_0_1; }
		
		//'successor'
		public Keyword getSuccessorKeyword_7() { return cSuccessorKeyword_7; }
		
		//successor=[WorkDefinition|EString]
		public Assignment getSuccessorAssignment_8() { return cSuccessorAssignment_8; }
		
		//[WorkDefinition|EString]
		public CrossReference getSuccessorWorkDefinitionCrossReference_8_0() { return cSuccessorWorkDefinitionCrossReference_8_0; }
		
		//EString
		public RuleCall getSuccessorWorkDefinitionEStringParserRuleCall_8_0_1() { return cSuccessorWorkDefinitionEStringParserRuleCall_8_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.EDate");
		private final Keyword cEDateKeyword = (Keyword)rule.eContents().get(1);
		
		//EDate returns ecore::EDate:
		//    'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//'EDate'
		public Keyword getEDateKeyword() { return cEDateKeyword; }
	}
	public class HumainElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.Humain");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHumainAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHumainKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRoleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRoleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRoleEStringParserRuleCall_4_1_0 = (RuleCall)cRoleAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Humain returns Humain:
		//    {Humain}
		//    'Humain'
		//    name=EString
		//    '{'
		//        ('role' role=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Humain}
		//'Humain'
		//name=EString
		//'{'
		//    ('role' role=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Humain}
		public Action getHumainAction_0() { return cHumainAction_0; }
		
		//'Humain'
		public Keyword getHumainKeyword_1() { return cHumainKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('role' role=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'role'
		public Keyword getRoleKeyword_4_0() { return cRoleKeyword_4_0; }
		
		//role=EString
		public Assignment getRoleAssignment_4_1() { return cRoleAssignment_4_1; }
		
		//EString
		public RuleCall getRoleEStringParserRuleCall_4_1_0() { return cRoleEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MaterielElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.Materiel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMaterielAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMaterielKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cQuantiteKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cQuantiteAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cQuantiteEIntParserRuleCall_4_1_0 = (RuleCall)cQuantiteAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Materiel returns Materiel:
		//    {Materiel}
		//    'Materiel'
		//    name=EString
		//    '{'
		//        ('quantite' quantite=EInt)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Materiel}
		//'Materiel'
		//name=EString
		//'{'
		//    ('quantite' quantite=EInt)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Materiel}
		public Action getMaterielAction_0() { return cMaterielAction_0; }
		
		//'Materiel'
		public Keyword getMaterielKeyword_1() { return cMaterielKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('quantite' quantite=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'quantite'
		public Keyword getQuantiteKeyword_4_0() { return cQuantiteKeyword_4_0; }
		
		//quantite=EInt
		public Assignment getQuantiteAssignment_4_1() { return cQuantiteAssignment_4_1; }
		
		//EInt
		public RuleCall getQuantiteEIntParserRuleCall_4_1_0() { return cQuantiteEIntParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	public class WorkSequenceTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.simplepdl.SimplePDL.WorkSequenceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStartToStartEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStartToStartStartToStartKeyword_0_0 = (Keyword)cStartToStartEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFinishToStartEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFinishToStartFinishToStartKeyword_1_0 = (Keyword)cFinishToStartEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cStartToFinishEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cStartToFinishStartToFinishKeyword_2_0 = (Keyword)cStartToFinishEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFinishToFinishEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFinishToFinishFinishToFinishKeyword_3_0 = (Keyword)cFinishToFinishEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum WorkSequenceType returns WorkSequenceType:
		//                startToStart = 'startToStart' | finishToStart = 'finishToStart' | startToFinish = 'startToFinish' | finishToFinish = 'finishToFinish';
		public EnumRule getRule() { return rule; }
		
		//startToStart = 'startToStart' | finishToStart = 'finishToStart' | startToFinish = 'startToFinish' | finishToFinish = 'finishToFinish'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//startToStart = 'startToStart'
		public EnumLiteralDeclaration getStartToStartEnumLiteralDeclaration_0() { return cStartToStartEnumLiteralDeclaration_0; }
		
		//'startToStart'
		public Keyword getStartToStartStartToStartKeyword_0_0() { return cStartToStartStartToStartKeyword_0_0; }
		
		//finishToStart = 'finishToStart'
		public EnumLiteralDeclaration getFinishToStartEnumLiteralDeclaration_1() { return cFinishToStartEnumLiteralDeclaration_1; }
		
		//'finishToStart'
		public Keyword getFinishToStartFinishToStartKeyword_1_0() { return cFinishToStartFinishToStartKeyword_1_0; }
		
		//startToFinish = 'startToFinish'
		public EnumLiteralDeclaration getStartToFinishEnumLiteralDeclaration_2() { return cStartToFinishEnumLiteralDeclaration_2; }
		
		//'startToFinish'
		public Keyword getStartToFinishStartToFinishKeyword_2_0() { return cStartToFinishStartToFinishKeyword_2_0; }
		
		//finishToFinish = 'finishToFinish'
		public EnumLiteralDeclaration getFinishToFinishEnumLiteralDeclaration_3() { return cFinishToFinishEnumLiteralDeclaration_3; }
		
		//'finishToFinish'
		public Keyword getFinishToFinishFinishToFinishKeyword_3_0() { return cFinishToFinishFinishToFinishKeyword_3_0; }
	}
	
	private final ProcessElements pProcess;
	private final ProcessElementElements pProcessElement;
	private final ResourceElements pResource;
	private final ProcessElement_ImplElements pProcessElement_Impl;
	private final EStringElements pEString;
	private final WorkDefinitionElements pWorkDefinition;
	private final WorkSequenceElements pWorkSequence;
	private final EIntElements pEInt;
	private final EDateElements pEDate;
	private final HumainElements pHumain;
	private final MaterielElements pMateriel;
	private final WorkSequenceTypeElements eWorkSequenceType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SimplePDLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProcess = new ProcessElements();
		this.pProcessElement = new ProcessElementElements();
		this.pResource = new ResourceElements();
		this.pProcessElement_Impl = new ProcessElement_ImplElements();
		this.pEString = new EStringElements();
		this.pWorkDefinition = new WorkDefinitionElements();
		this.pWorkSequence = new WorkSequenceElements();
		this.pEInt = new EIntElements();
		this.pEDate = new EDateElements();
		this.pHumain = new HumainElements();
		this.pMateriel = new MaterielElements();
		this.eWorkSequenceType = new WorkSequenceTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.simplepdl.SimplePDL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Process returns Process:
	//    {Process}
	//    'Process'
	//    name=EString
	//    '{'
	//        ('processElements' '{' processElements+=ProcessElement ( "," processElements+=ProcessElement)* '}' )?
	//    '}';
	public ProcessElements getProcessAccess() {
		return pProcess;
	}
	
	public ParserRule getProcessRule() {
		return getProcessAccess().getRule();
	}
	
	//ProcessElement returns ProcessElement:
	//    ProcessElement_Impl | WorkDefinition | WorkSequence;
	public ProcessElementElements getProcessElementAccess() {
		return pProcessElement;
	}
	
	public ParserRule getProcessElementRule() {
		return getProcessElementAccess().getRule();
	}
	
	//Resource returns Resource:
	//    Humain | Materiel;
	public ResourceElements getResourceAccess() {
		return pResource;
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}
	
	//ProcessElement_Impl returns ProcessElement:
	//    {ProcessElement}
	//    'ProcessElement'
	//    name=EString
	//    '{'
	//        ('description' description=EString)?
	//    '}';
	public ProcessElement_ImplElements getProcessElement_ImplAccess() {
		return pProcessElement_Impl;
	}
	
	public ParserRule getProcessElement_ImplRule() {
		return getProcessElement_ImplAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//WorkDefinition returns WorkDefinition:
	//    {WorkDefinition}
	//    'WorkDefinition'
	//    name=EString
	//    '{'
	//        ('description' description=EString)?
	//        ('duration' duration=EInt)?
	//        ('startDate' startDate=EString)?
	//        ('endDate' endDate=EString)?
	//        ('linksToSuccessor' '(' linksToSuccessor+=[WorkSequence|EString] ( "," linksToSuccessor+=[WorkSequence|EString])* ')' )?
	//        ('linksToPredecessor' '(' linksToPredecessor+=[WorkSequence|EString] ( "," linksToPredecessor+=[WorkSequence|EString])* ')' )?
	//        ('resource' '{' resource+=Resource ( "," resource+=Resource)* '}' )?
	//    '}';
	public WorkDefinitionElements getWorkDefinitionAccess() {
		return pWorkDefinition;
	}
	
	public ParserRule getWorkDefinitionRule() {
		return getWorkDefinitionAccess().getRule();
	}
	
	//WorkSequence returns WorkSequence:
	//    'WorkSequence'
	//    name=EString
	//    '{'
	//        ('description' description=EString)?
	//        ('type' type=WorkSequenceType)?
	//        'predecessor' predecessor=[WorkDefinition|EString]
	//        'successor' successor=[WorkDefinition|EString]
	//    '}';
	public WorkSequenceElements getWorkSequenceAccess() {
		return pWorkSequence;
	}
	
	public ParserRule getWorkSequenceRule() {
		return getWorkSequenceAccess().getRule();
	}
	
	//EInt returns ecore::EInt:
	//    '-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EDate returns ecore::EDate:
	//    'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
	public EDateElements getEDateAccess() {
		return pEDate;
	}
	
	public ParserRule getEDateRule() {
		return getEDateAccess().getRule();
	}
	
	//Humain returns Humain:
	//    {Humain}
	//    'Humain'
	//    name=EString
	//    '{'
	//        ('role' role=EString)?
	//    '}';
	public HumainElements getHumainAccess() {
		return pHumain;
	}
	
	public ParserRule getHumainRule() {
		return getHumainAccess().getRule();
	}
	
	//Materiel returns Materiel:
	//    {Materiel}
	//    'Materiel'
	//    name=EString
	//    '{'
	//        ('quantite' quantite=EInt)?
	//    '}';
	public MaterielElements getMaterielAccess() {
		return pMateriel;
	}
	
	public ParserRule getMaterielRule() {
		return getMaterielAccess().getRule();
	}
	
	//enum WorkSequenceType returns WorkSequenceType:
	//                startToStart = 'startToStart' | finishToStart = 'finishToStart' | startToFinish = 'startToFinish' | finishToFinish = 'finishToFinish';
	public WorkSequenceTypeElements getWorkSequenceTypeAccess() {
		return eWorkSequenceType;
	}
	
	public EnumRule getWorkSequenceTypeRule() {
		return getWorkSequenceTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
